{"version":3,"sources":["LoginApp/reducers/signedStatus.js","LoginApp/reducers/localAccount.js","LoginApp/reducers/index.js","LoginApp/reducers/youtubeList.js","LoginApp/reducers/selectedYTVideo.js","LoginApp/reducers/displayLoginApp.js","LoginApp/api/youtube.js","LoginApp/actions/index.js","LoginApp/AccountGoogle.js","LoginApp/Header.js","LoginApp/ListDisplay.js","LoginApp/SearchList.js","LoginApp/Login.js","LoginApp/CreateAccount.js","LoginApp/IntroMenu.js","LoginApp/DeleteAccount.js","LoginApp/LoginNav.js","index.js"],"names":["INIT_STATE","userSignStatus","userID","type","0","email","firstName","lastName","password","id","combineReducers","signedStatus","state","arguments","length","undefined","action","Object","objectSpread","payload","localAccount","defineProperty","_","omit","youtubeList","selectedYTVideo","displayLoginApp","form","formReducer","axios","create","baseURL","displayLoginNav","bool","userSignIn","userSignOut","resetSelectedVideo","AccountGoogle","onAuthChange","isUserSignedIn","_this","props","auth","currentUser","get","getId","_this2","this","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","isSignedIn","listen","userType","react_default","a","createElement","className","onClick","signOut","name","signIn","renderButton","React","Component","connect","Header","renderIntro","react_router_dom","to","LoginApp_AccountGoogle","ListDisplay","videoId","listIsHidden","onSelectedVideo","video","selectedVideo","setState","renderList","i","listOfVideos","map","keyID","style","isVideoSelected","fontSize","key","src","snippet","thumbnails","medium","url","alt","title","displayList","concat","margin","width","SearchList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchBtnClick","inputValue","getAPI","resetYoutubeList","placeholder","value","onChange","event","target","LoginApp_ListDisplay","searchInput","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","response","wrap","_context","prev","next","youtube","params","part","maxResults","q","sent","data","items","t0","stop","_x","apply","Login","attemptToLogIn","renderError","meta","touched","error","active","renderElement","formProps","label","assign","input","onSubmitBtn","formValues","validateInputValues","reset","alertLogIn","accountArr","values","accountDataBase","forEach","account","LoginApp_SearchList","onSubmit","handleSubmit","bind","Field","component","Wrapper","reduxForm","validate","CreateAccount","isChecked","newAccountSuccessful","alreadyExist","objArr","userAcc","check","obj","isEmpty","createNewAccount","checked","formWrapped","accInfo","IntroMenu","textAlign","marginTop","onClickYes","deleteAcc","isSignIn","display","justifyContent","color","marginLeft","LoginApp_Login","LoginNav","LoginApp_Header","react_router","path","exact","DeleteAccount","ReactDOM","render","es","store","createStore","reducers","applyMiddleware","reduxThunk","LoginApp_LoginNav","document","querySelector"],"mappings":"oNAAMA,EAAa,CACfC,eAAgB,KAChBC,OAAQ,KACRC,KAAM,+BCDJH,EAAa,CACfI,EAAG,CACCC,MAAO,KACPC,UAAW,KACXC,SAAU,KACVC,SAAU,KACVC,GAAI,OCAGC,cAAgB,CAC3BC,aFHW,WAAgC,IAA/BC,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvBb,EAAYgB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAOC,EAAOb,MACV,IAAK,UACD,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAIL,EAAX,CAAkBX,gBAAgB,EAAMC,OAAQc,EAAOG,QAAQjB,OAAQC,KAAMa,EAAOG,QAAQhB,OAChG,IAAK,WACD,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAIL,EAAX,CAAkBX,gBAAgB,EAAOC,OAAQ,KAAMC,KAAM,OACjE,QACI,OAAOS,IEJDQ,aDGH,WAAgC,IAA/BR,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvBb,EAAYgB,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAOC,EAAOb,MACV,IAAK,aACD,OAAOc,OAAAC,EAAA,EAAAD,CAAA,GAAIL,EAAXK,OAAAI,EAAA,EAAAJ,CAAA,GAAmBD,EAAOG,QAAQV,GAAKO,EAAOG,UAClD,IAAK,aACD,OAAOG,IAAEC,KAAKX,EAAOI,EAAOG,SAChC,QACI,OAAOP,ICVaY,YCTjB,WAAwB,IAAvBZ,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnC,OAAOC,EAAOb,MACV,IAAK,gBACD,OAAOa,EAAOG,QAClB,IAAK,eACD,MAAO,uBACX,IAAK,gBACD,MAAO,GACX,QACI,OAAOP,IDA0Ba,gBET9B,WAA0B,IAAzBb,EAAyBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,KACpB,QADqCA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACvBZ,MACV,IAAK,iBACD,OAAO,EACX,IAAK,iBACD,OAAO,EACX,QACI,OAAOS,IFE2Cc,gBGT/C,WAA2B,IAA1Bd,EAA0BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAAXG,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtC,OAAOC,EAAOb,MACV,IAAM,oBACF,OAAOa,EAAOG,QAClB,QACI,OAAOP,IHKfe,KAAMC,gGIRKC,WAAMC,OAAQ,CACzBC,QAAS,0CCDAC,EAAkB,SAAAC,GAC3B,MAAO,CACH9B,KAAM,oBACNgB,QAASc,IAIJC,EAAa,SAAEhC,EAAQC,GAChC,MAAO,CACHA,KAAM,UACNgB,QAAS,CACLjB,SACAC,UAKCgC,EAAc,WACvB,MAAO,CACHhC,KAAM,aA8CDiC,EAAqB,WAC9B,MAAO,CACHjC,KAAM,mBCjERkC,6MAeFC,aAAe,SAAAC,GACRA,EAAgBC,EAAKC,MAAMP,WAAWM,EAAKE,KAAKC,YAAYC,MAAMC,QAAS,UACzEL,EAAKC,MAAMN,kGAfA,IAAAW,EAAAC,KAChBC,OAAOC,KAAKC,KAAK,eAAgB,WAC7BF,OAAOC,KAAKE,OAAOC,KAAK,CACpBC,SAAU,4EACVC,MAAO,UACRC,KAAK,WACJT,EAAKJ,KAAOM,OAAOC,KAAKO,MAAMC,kBAC9BX,EAAKR,aAAaQ,EAAKJ,KAAKgB,WAAWd,OACvCE,EAAKJ,KAAKgB,WAAWC,OAAOb,EAAKR,yDAWzC,OAAiC,OAA9BS,KAAKN,MAAMxC,gBAAoD,UAAxB8C,KAAKN,MAAMmB,SAA6BC,EAAAC,EAAAC,cAAA,YAC1EhB,KAAKN,MAAMxC,eAEX4D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAClBC,QAASlB,KAAKL,KAAKwB,SAASL,EAAAC,EAAAC,cAAA,YAAUI,KAAK,gBAD3C,uBAKAN,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAClBC,QAASlB,KAAKL,KAAK0B,QAAQP,EAAAC,EAAAC,cAAA,YAAUI,KAAK,gBAD1C,uDAOR,OAAON,EAAAC,EAAAC,cAAA,WAAMhB,KAAKsB,uBApCEC,IAAMC,WA4CnBC,cAJS,SAAA5D,GACpB,MAAO,CAAEX,eAAgBW,EAAMD,aAAaV,eAAgB2D,SAAUhD,EAAMD,aAAaR,OAGrD,CACpC+B,aAAYC,eADDqC,CAEZnC,GC5CGoC,6MACFC,YAAc,WACV,OAAGlC,EAAKC,MAAMxC,gBAA0C,WAAxBuC,EAAKC,MAAMmB,SAA8BC,EAAAC,EAAAC,cAAA,YACtEvB,EAAKC,MAAMxC,gBAA0C,UAAxBuC,EAAKC,MAAMmB,SAEnCC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,SAASX,QAASzB,EAAKC,MAAMN,aAAtC,UACA0B,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,WAAT,mBAIRf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,UAAT,SACAf,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,WAAT,4FAMR,OACIf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVjB,KAAK2B,cACNb,EAAAC,EAAAC,cAACc,EAAD,cAtBKP,IAAMC,WAgCZC,cAJS,SAAA5D,GACpB,MAAO,CAAEX,eAAgBW,EAAMD,aAAaV,eAAgB2D,SAAUhD,EAAMD,aAAaR,OAGrD,CAAEgC,eAA3BqC,CAA0CC,qBClCnDK,6MAEFlE,MAAQ,CAAEmE,QAAS,KAAMC,cAAc,KAMvCC,gBAAkB,SAAAC,GACd1C,EAAKC,MAAM0C,gBACX3C,EAAK4C,SAAS,CAAEL,QAASG,EAAMzE,GAAGsE,aAGtCM,WAAa,WACT,IAAIC,EAAI,EACR,OAAO9C,EAAKC,MAAM8C,aAAaC,IAAI,SAAAN,GAC/B,IAAMO,OAA6B1E,IAArBmE,EAAMzE,GAAGsE,QAAwBG,EAAMzE,GAAGsE,QAAUO,IAClE,OACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACX0B,MAAOlD,EAAKC,MAAMkD,gBAAkB,GAAK,CAACC,SAAU,QACpDC,IAAKJ,EAAOxB,QAAS,kBAAMzB,EAAKyC,gBAAgBC,KAChDrB,EAAAC,EAAAC,cAAA,OAAK+B,IAAKZ,EAAMa,QAAQC,WAAWC,OAAOC,IAAKC,IAAI,OAAMtC,EAAAC,EAAAC,cAAA,SAAImB,EAAMa,QAAQK,aAM3FC,YAAc,WACV,OAAG7D,EAAK5B,MAAMoE,aAENnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,UAAQ+B,IAAG,iCAAAQ,OAAmC9D,EAAK5B,MAAMmE,YAE7DlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,YAAUE,QAAS,kBAAMzB,EAAK4C,SAAS,CAAEJ,cAAc,KAAUb,KAAK,0BAK9EN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,UAAQ+B,IAAG,iCAAAQ,OAAmC9D,EAAK5B,MAAMmE,WACzDlB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBAAwBC,QAAS,kBAAMzB,EAAKC,MAAML,sBACjEsD,MAAO,CAAEa,OAAQ,YAAaC,MAAO,SADrC,WAKJ3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,YAAUE,QAAS,kBAAMzB,EAAK4C,SAAS,CAAEJ,cAAc,KAASb,KAAK,2BAEzEN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACVxB,EAAK6C,sGA/CtBtC,KAAKN,MAAML,sDAsDX,OAAIW,KAAKN,MAAMkD,gBAEH5C,KAAKsD,cADNxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBjB,KAAKsC,qBA5DhCf,IAAMC,WAqEjBC,cAJS,SAAA5D,GACpB,MAAO,CAAE2E,aAAc3E,EAAMY,YAAamE,gBAAiB/E,EAAMa,kBAG7B,CAAE0D,cHZb,WACzB,MAAO,CACHhF,KAAM,mBGU2CiC,sBAA1CoC,CAAgEM,GCpEzE2B,cACF,SAAAA,EAAYhE,GAAO,IAAAD,EAAA,OAAAvB,OAAAyF,EAAA,EAAAzF,CAAA8B,KAAA0D,IACfjE,EAAAvB,OAAA0F,EAAA,EAAA1F,CAAA8B,KAAA9B,OAAA2F,EAAA,EAAA3F,CAAAwF,GAAAI,KAAA9D,KAAMN,KAKVqE,iBAAmB,WACZtE,EAAK5B,MAAMmG,aACVvE,EAAKC,MAAMuE,OAAOxE,EAAK5B,MAAMmG,YAC7BvE,EAAK4C,SAAS,CAAE2B,WAAY,KAC5BvE,EAAKC,MAAML,uBARfI,EAAK5B,MAAQ,CAAEmG,WAAY,IAC3BvE,EAAKC,MAAMwE,mBAHIzE,wEAcV,IAAAM,EAAAC,KACL,OACIc,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6BACXH,EAAAC,EAAAC,cAAA,SAAO5D,KAAK,OAAO6D,UAAU,aAAakD,YAAY,yBACtDC,MAAOpE,KAAKnC,MAAMmG,WAClBK,SAAU,SAAAC,GAAK,OAAIvE,EAAKsC,SAAS,CAAE2B,WAAYM,EAAMC,OAAOH,WAE5DtD,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYC,QAASlB,KAAK+D,kBAA5C,YAKRjD,EAAAC,EAAAC,cAACwD,EAAD,cA7BSjD,IAAMC,WAmChBC,cAAQ,KAAM,CACzBwC,OJTwB,SAAAQ,GAAW,sBAAAC,EAAAxG,OAAAyG,EAAA,EAAAzG,CAAA0G,EAAA7D,EAAA8D,KAAI,SAAAC,EAAMC,GAAN,IAAAC,EAAA,OAAAJ,EAAA7D,EAAAkE,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEZC,EAAQxF,IAAI,UAAW,CAC1CyF,OAAQ,CACJC,KAAM,UACNC,WAAY,IACZ1C,IAAK,0CACL2C,EAAGhB,KAPwB,OAE7BO,EAF6BE,EAAAQ,KAUnCX,EAAS,CAAE3H,KAAM,gBAAiBgB,QAAS4G,EAASW,KAAKC,QAVtBV,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAW,GAAAX,EAAA,SAYnCH,EAAS,CAAE3H,KAAM,iBAZkB,iCAAA8H,EAAAY,SAAAhB,EAAA,iBAAJ,gBAAAiB,GAAA,OAAArB,EAAAsB,MAAAhG,KAAAlC,YAAA,IISboG,iBJOM,WAC5B,MAAO,CACH9G,KAAM,kBIT8BiC,sBAD7BoC,CAEZiC,GCpCGuC,6MACFpI,MAAQ,CAAEqI,gBAAgB,KAE1BC,YAAc,SAAAC,GAAI,OAAIA,EAAKC,SAAWD,EAAKE,QAAUF,EAAKG,OAASH,EAAKE,MAAQ,QAEhFE,cAAgB,SAAAC,GAAa,IACjBL,EAASK,EAATL,KACR,OACItF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVwF,EAAUC,MAAM5F,EAAAC,EAAAC,cAAA,QAAA9C,OAAAyI,OAAA,CAAOvJ,KAAMqJ,EAAUrJ,MAAUqJ,EAAUG,MAA3C,CAAkDzC,YAAa1E,EAAK0G,YAAYC,GACjGnF,UAAWmF,EAAKC,SAAWD,EAAKE,QAAUF,EAAKG,OAAS,iBAAmB,UAMvFM,YAAc,SAAAC,GACVrH,EAAK4C,SAAS,CAAE6D,gBAAgB,IAChCzG,EAAKsH,oBAAoBD,GACzBrH,EAAKC,MAAMsH,WAGfC,WAAa,KAEbF,oBAAsB,SAAAD,GAClB,IAAMI,EAAahJ,OAAOiJ,OAAO1H,EAAKC,MAAM0H,iBAC5C3H,EAAKwH,WAAa,GAEdC,EAAWnJ,SAAQ0B,EAAKwH,WAAa,yCACzCC,EAAWG,QAAQ,SAAAC,IACkB,IAA9B7H,EAAKC,MAAMxC,gBAA4BoK,EAAQhK,QAAUwJ,EAAWxJ,OAASgK,EAAQ7J,WAAaqJ,EAAWrJ,UAG5GgC,EAAKC,MAAMP,WAAWmI,EAAQ5J,GAAI,SAClC+B,EAAK4C,SAAS,CAAE6D,gBAAgB,KAHhCzG,EAAKwH,WAAa,mHAQrB,IAAAlH,EAAAC,KAEL,OADAA,KAAKN,MAAMT,iBAAgB,GACvBe,KAAKnC,MAAMqI,iBAAgD,IAA9BlG,KAAKN,MAAMxC,eAQpC8C,KAAKnC,MAAMqI,iBAAgD,IAA9BlG,KAAKN,MAAMxC,eAExC4D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,SAAIhB,KAAKiH,YACTnG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wBAAwBC,QAAS,kBAAMnB,EAAKsC,SAAS,CAAE6D,gBAAgB,MAAzF,WAKEpF,EAAAC,EAAAC,cAACuG,EAAD,MAfNzG,EAAAC,EAAAC,cAAA,QAAMwG,SAAUxH,KAAKN,MAAM+H,aAAazH,KAAK6G,YAAYa,KAAK1H,QAC1Dc,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOvG,KAAK,QAAQwG,UAAW5H,KAAKwG,cAAeE,MAAM,eAAetJ,KAAK,UAC7E0D,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOvG,KAAK,WAAWwG,UAAW5H,KAAKwG,cAAeE,MAAM,kBAAkBtJ,KAAK,SACnF0D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAlB,kBA9CAM,IAAMC,WA2EpBqG,EAAUC,YAAU,CACtBlJ,KAAM,YAAamJ,SAdN,SAAAjB,GACb,IAAMR,EAAQ,GAKd,OAHIQ,EAAWxJ,QAAOgJ,EAAMhJ,MAAQ,8BAChCwJ,EAAWrJ,WAAU6I,EAAM7I,SAAW,iCAEnC6I,IAOKwB,CAEb7B,GAEYxE,cARS,SAAA5D,GACpB,MAAO,CAAEuJ,gBAAiBvJ,EAAMQ,aAAcnB,eAAgBW,EAAMD,aAAaV,iBAO7C,CACpCiC,aAAYF,mBADDwC,CAEZoG,GChFGG,6MACFnK,MAAQ,CAAEoK,WAAW,EAAMC,sBAAsB,EAAOC,cAAc,KAEtEhC,YAAc,SAAAC,GAAI,OAAIA,EAAKC,SAAWD,EAAKE,QAAUF,EAAKG,OAASH,EAAKE,MAAQ,QAEhFE,cAAgB,SAAAC,GAAa,IACjBL,EAASK,EAATL,KACR,MAA6B,UAAzBK,EAAUG,MAAMxF,KAEZN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,cACeH,EAAAC,EAAAC,cAAA,QAAA9C,OAAAyI,OAAA,CAAOvJ,KAAK,QAAQ+G,YAAa1E,EAAK0G,YAAYC,GAC7DnF,UAAWmF,EAAKC,SAAWD,EAAKE,QAAUF,EAAKG,OAAS,iBAAmB,IACvEE,EAAUG,SAGO,aAAzBH,EAAUG,MAAMxF,KAEhBN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,iBACkBH,EAAAC,EAAAC,cAAA,QAAA9C,OAAAyI,OAAA,CAAOvJ,KAAK,OAAO+G,YAAa1E,EAAK0G,YAAYC,GAC/DnF,UAAWmF,EAAKC,SAAWD,EAAKE,QAAUF,EAAKG,OAAS,iBAAmB,IACvEE,EAAUG,SAKlB9F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVwF,EAAUC,MAAM5F,EAAAC,EAAAC,cAAA,QAAA9C,OAAAyI,OAAA,CAAOvJ,KAAK,OAAO+G,YAAa1E,EAAK0G,YAAYC,GAClEnF,UAAWmF,EAAKC,SAAWD,EAAKE,QAAUF,EAAKG,OAAS,iBAAmB,IACvEE,EAAUG,YAK9BC,YAAc,SAAAC,GAEV,IAQQpJ,EARF0K,EAASlK,OAAOiJ,OAAO1H,EAAKC,MAAM2I,SAEpCC,GAAQ,GACZF,EAAOf,QAAQ,SAAAkB,GACRA,EAAIjL,QAAUwJ,EAAWxJ,QAAOgL,GAAQ,KAG5CA,IAEIE,kBAAQ/I,EAAKC,MAAM2I,UAA6B,OAAjBD,EAAO,GAAG1K,GACxCA,EAAK,GAELA,EAAK0K,EAAO,GAAG1K,GAAK,EACpB0K,EAAOf,QAAQ,SAAAkB,GACR7K,GAAM6K,EAAI7K,KAAIA,EAAK6K,EAAI7K,GAAK,MAIvC+B,EAAKC,MAAM+I,iBAAXvK,OAAAC,EAAA,EAAAD,CAAA,GAAgC4I,EAAhC,CAA4CpJ,QAC5C+B,EAAK4C,SAAS,CAAE6F,sBAAsB,KACnCzI,EAAK4C,SAAS,CAAE8F,cAAc,6EAIhC,IAAApI,EAAAC,KAEL,OADAA,KAAKN,MAAMT,iBAAgB,GACxBe,KAAKnC,MAAMqK,uBAAyBlI,KAAKnC,MAAMsK,aAC1CrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,4DAEIH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,SAASZ,UAAU,wBAAwBC,QAASlB,KAAKN,MAAMN,aAAxE,WAGTY,KAAKnC,MAAMsK,aACVrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,yCAEIH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,SAASZ,UAAU,wBAAwBC,QAASlB,KAAKN,MAAMN,aAAxE,WAGLY,KAAKN,MAAMxC,eACV4D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,SAASZ,UAAU,wBAAwBC,QAASlB,KAAKN,MAAMN,aAAxE,WAIJ0B,EAAAC,EAAAC,cAAA,QAAMwG,SAAUxH,KAAKN,MAAM+H,aAAazH,KAAK6G,cACzC/F,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOvG,KAAK,YAAYwG,UAAW5H,KAAKwG,cAAeE,MAAM,qBAC7D5F,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOvG,KAAK,WAAWwG,UAAW5H,KAAKwG,cAAeE,MAAM,oBAC5D5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAf,eACIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOvG,KAAK,SAASwG,UAAU,QAAQxK,KAAK,QAAQgH,MAAM,OAC1DsE,QAAS1I,KAAKnC,MAAMoK,UAAY/G,QAAS,kBAAMnB,EAAKsC,SAAS,CAAE4F,WAAW,OAF9E,OAGInH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOvG,KAAK,SAASwG,UAAU,QAAQxK,KAAK,QAAQgH,MAAM,SAC1DsE,SAAU1I,KAAKnC,MAAMoK,UAAW/G,QAAS,kBAAMnB,EAAKsC,SAAS,CAAE4F,WAAW,OAJ9E,WAOJnH,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOvG,KAAK,QAAQwG,UAAW5H,KAAKwG,gBACpC1F,EAAAC,EAAAC,cAAC2G,EAAA,EAAD,CAAOvG,KAAK,WAAWwG,UAAW5H,KAAKwG,gBACvC1F,EAAAC,EAAAC,cAAA,UAAQC,UAAU,kBAAlB,kBA5FYM,IAAMC,WAiH5BmH,EAAcb,YAAU,CAC1BlJ,KAAM,aAAcmJ,SAhBP,SAAAjB,GACb,IAAMR,EAAQ,GAOd,OALIQ,EAAWvJ,YAAW+I,EAAM/I,UAAY,mCACxCuJ,EAAWtJ,WAAU8I,EAAM9I,SAAW,kCACtCsJ,EAAWxJ,QAAOgJ,EAAMhJ,MAAQ,8BAChCwJ,EAAWrJ,WAAU6I,EAAM7I,SAAW,iCAEnC6I,IAOSwB,CAEjBE,GAEYvG,cARS,SAAA5D,GACpB,MAAO,CAAEwK,QAASxK,EAAMQ,aAAcnB,eAAgBW,EAAMD,aAAaV,iBAOrC,CAAE+B,kBAAiBwJ,iBNnG3B,SAAAG,GAC5B,MAAO,CACHxL,KAAM,aACNgB,QAASwK,KMgGFnH,CAAgEkH,GCvHzEE,mLAGE,OADA7I,KAAKN,MAAMT,iBAAgB,GACvBe,KAAKN,MAAMiB,WAOPG,EAAAC,EAAAC,cAACuG,EAAD,MALAzG,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAEmG,UAAW,SAAUC,UAAW,OAAQlG,SAAU,SAAhE,2FALQtB,IAAMC,WAmBfC,cAJS,SAAA5D,GACpB,MAAO,CAAE8C,WAAY9C,EAAMD,aAAaV,iBAGJ,CAAE+B,mBAA3BwC,CAA8CoH,GCGvDG,EAAa,SAAAtJ,GACfA,EAAMuJ,UAAUvJ,EAAMwJ,SAAS/L,QAC/BuC,EAAMN,eAOKqC,cAJS,SAAA5D,GACpB,MAAO,CAAEqL,SAAUrL,EAAMD,eAGW,CACpCqL,URiBgC,SAAAvL,GAChC,MAAO,CACHN,KAAM,aACNgB,QAASV,IQpBoB0B,cAAaH,mBADnCwC,CA9BO,SAAA/B,GAElB,OADAA,EAAMT,iBAAgB,GACnBS,EAAMwJ,SAAShM,gBAA0C,UAAxBwC,EAAMwJ,SAAS9L,KAE3C0D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAAf,+CACAH,EAAAC,EAAAC,cAAA,OAAK2B,MAAO,CAAEwG,QAAS,OAAQC,eAAgB,WAC3CtI,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,SAASZ,UAAU,wBAC5BC,QAAS,kBAAM8H,EAAWtJ,IAAQiD,MAAO,CAAE0G,MAAO,uBADlD,OAIAvI,EAAAC,EAAAC,cAACY,EAAA,EAAD,CAAMC,GAAG,SAASZ,UAAU,wBAC5B0B,MAAO,CAAC2G,WAAW,OAAQD,MAAO,uBADlC,QAOJvI,EAAAC,EAAAC,cAACuI,EAAD,QCJDC,GAZE,WACb,OACI1I,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACId,EAAAC,EAAAC,cAACyI,EAAD,MACA3I,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAAChC,UAAWiB,IACjC/H,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,KAAK,SAAS/B,UAAW3B,IAChCnF,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,KAAK,UAAU/B,UAAWI,IACjClH,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAOC,KAAK,UAAU/B,UAAWiC,MCP7CC,IAASC,OACLjJ,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAUC,MAAOC,YAAYC,EAAUC,YAAgBC,OACnDvJ,EAAAC,EAAAC,cAACsJ,GAAD,OAEJC,SAASC,cAAc","file":"static/js/main.5f9dba05.chunk.js","sourcesContent":["const INIT_STATE = {\r\n    userSignStatus: null,\r\n    userID: null,\r\n    type: null\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'SIGN_IN':\r\n            return {...state, userSignStatus: true, userID: action.payload.userID, type: action.payload.type};\r\n        case 'SIGN_OUT':\r\n            return {...state, userSignStatus: false, userID: null, type: null};\r\n        default: \r\n            return state;\r\n    };\r\n};","import _ from 'lodash';\r\n\r\nconst INIT_STATE = {\r\n    0: {\r\n        email: null,\r\n        firstName: null,\r\n        lastName: null,\r\n        password: null,\r\n        id: null\r\n    }\r\n}\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n    switch(action.type) {\r\n        case 'CREATE_ACC':\r\n            return {...state, [action.payload.id]: action.payload};\r\n        case 'DELETE_ACC':\r\n            return _.omit(state, action.payload);\r\n        default:\r\n            return state;\r\n    };\r\n};","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport signedStatus from './signedStatus';\r\nimport localAccount from './localAccount';\r\nimport youtubeList from './youtubeList';\r\nimport selectedYTVideo from './selectedYTVideo';\r\nimport displayLoginApp from './displayLoginApp';\r\n\r\nexport default combineReducers({\r\n    signedStatus, localAccount, youtubeList, selectedYTVideo, displayLoginApp,\r\n    form: formReducer\r\n});","export default (state = [], action) => {\r\n    switch(action.type) {\r\n        case 'FETCH_YT_LIST':\r\n            return action.payload;\r\n        case 'FETCH_YT_ERR':\r\n            return 'Somethink went wrong';\r\n        case 'CLEAR_YT_LIST':\r\n            return [];\r\n        default:\r\n            return state;\r\n    };\r\n};","export default (state = null, action) => {\r\n    switch(action.type) {\r\n        case 'SELECTED_VIDEO':\r\n            return true;\r\n        case 'SELECTED_RESET':\r\n            return false;\r\n        default:\r\n            return state;\r\n    };\r\n};","export default (state = false, action) => {\r\n    switch(action.type) {\r\n        case  'DISPLAY_LOGIN_NAV':\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    };\r\n};","import axios from 'axios';\r\n\r\nexport default axios.create ({\r\n    baseURL: 'https://www.googleapis.com/youtube/v3'\r\n});","import youtube from '../api/youtube';\r\n\r\nexport const displayLoginNav = bool => {\r\n    return {\r\n        type: 'DISPLAY_LOGIN_NAV',\r\n        payload: bool\r\n    }\r\n};\r\n \r\nexport const userSignIn = ( userID, type ) => {\r\n    return {\r\n        type: 'SIGN_IN',\r\n        payload: {\r\n            userID,\r\n            type\r\n        }\r\n    };\r\n};\r\n\r\nexport const userSignOut = () => {\r\n    return {\r\n        type: 'SIGN_OUT'\r\n    };\r\n};\r\n\r\nexport const createNewAccount = accInfo => {\r\n    return {\r\n        type: 'CREATE_ACC',\r\n        payload: accInfo\r\n    };\r\n};\r\n\r\nexport const fetchYoutube = searchInput => async dispatch => {\r\n    try {\r\n        const response = await youtube.get('/search', {\r\n            params: {\r\n                part: 'snippet',\r\n                maxResults: '5',\r\n                key: 'AIzaSyBb4uRjxqUDQyXtMRC3NBBQLy3TmdBwnNw',\r\n                q: searchInput\r\n            }\r\n          });\r\n        dispatch({ type: 'FETCH_YT_LIST', payload: response.data.items});\r\n    } catch (error) {\r\n        dispatch({ type: 'FETCH_YT_ERR' });\r\n    };\r\n};\r\n\r\nexport const resetYoutubeList = () => {\r\n    return {\r\n        type: 'CLEAR_YT_LIST'\r\n    };\r\n};\r\n\r\nexport const deleteCurrentAccount = id => {\r\n    return { \r\n        type: 'DELETE_ACC',\r\n        payload: id\r\n     };\r\n};\r\n\r\nexport const selectedVideo = () => { \r\n    return {\r\n        type: 'SELECTED_VIDEO' \r\n    };\r\n};\r\n\r\nexport const resetSelectedVideo = () => { \r\n    return {\r\n        type: 'SELECTED_RESET' \r\n    };\r\n};","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { userSignIn, userSignOut } from './actions';\r\n\r\nclass AccountGoogle extends React.Component {\r\n\r\n    componentDidMount() {\r\n        window.gapi.load('client:auth2', () => {\r\n            window.gapi.client.init({\r\n                clientId: '1038306277892-1ng7t4ubhiu0gkrvtdso06q4ei6n23ln.apps.googleusercontent.com',\r\n                scope: 'email'  \r\n            }).then(() => {\r\n                this.auth = window.gapi.auth2.getAuthInstance();\r\n                this.onAuthChange(this.auth.isSignedIn.get());\r\n                this.auth.isSignedIn.listen(this.onAuthChange);\r\n            });\r\n        });\r\n    };\r\n\r\n    onAuthChange = isUserSignedIn => {\r\n        if(isUserSignedIn) this.props.userSignIn(this.auth.currentUser.get().getId(), 'google');\r\n        else this.props.userSignOut();\r\n    };\r\n\r\n    renderButton() {\r\n        if(this.props.userSignStatus === null  || this.props.userType === 'local') return <div></div>;\r\n        else if(this.props.userSignStatus) {\r\n            return (\r\n                <button className=\"login-nav-google\" \r\n                onClick={this.auth.signOut}><ion-icon name=\"logo-google\"></ion-icon>Log out from Google</button> \r\n            );\r\n        } else {\r\n            return (\r\n                <button className=\"login-nav-google\" \r\n                onClick={this.auth.signIn}><ion-icon name=\"logo-google\"></ion-icon>Log in with Google</button>\r\n            );\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return <div>{this.renderButton()}</div>;\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { userSignStatus: state.signedStatus.userSignStatus, userType: state.signedStatus.type };\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    userSignIn, userSignOut\r\n})(AccountGoogle);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { userSignOut } from './actions';\r\nimport AccountGoogle from './AccountGoogle';\r\n\r\nclass Header extends React.Component {\r\n    renderIntro = () => {\r\n        if(this.props.userSignStatus && this.props.userType === 'google') return <div></div>;\r\n        if(this.props.userSignStatus && this.props.userType === 'local') \r\n            return (\r\n                <div className=\"login-nav-item\">\r\n                    <Link to=\"/login\" onClick={this.props.userSignOut}>Logout</Link>\r\n                    <Link to=\"/delete\">Delete account</Link>\r\n                </div>\r\n            );\r\n        return (\r\n            <div className=\"login-nav-item\">\r\n                <Link to=\"/login\">Login</Link>\r\n                <Link to=\"/create\">Create account</Link>\r\n            </div>\r\n        );\r\n    };\r\n    \r\n    render() {\r\n        return(\r\n            <div className=\"login-nav\">\r\n                {this.renderIntro()}\r\n                <AccountGoogle />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { userSignStatus: state.signedStatus.userSignStatus, userType: state.signedStatus.type };\r\n}\r\n\r\nexport default connect(mapStateToProps, { userSignOut })(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { selectedVideo, resetSelectedVideo } from './actions';\r\n\r\nclass ListDisplay extends React.Component {\r\n\r\n    state = { videoId: null, listIsHidden: true };\r\n\r\n    componentWillUnmount() {\r\n        this.props.resetSelectedVideo();\r\n    };\r\n\r\n    onSelectedVideo = video => {\r\n        this.props.selectedVideo();\r\n        this.setState({ videoId: video.id.videoId });\r\n    };\r\n\r\n    renderList = () => {\r\n        let i = 0;\r\n        return this.props.listOfVideos.map(video => {\r\n            const keyID = video.id.videoId !== undefined ? video.id.videoId : i++;\r\n            return (\r\n                <div className=\"video-container__list-item\"\r\n                    style={this.props.isVideoSelected ? {} : {fontSize: '2rem'}}\r\n                    key={keyID} onClick={() => this.onSelectedVideo(video)}>\r\n                    <img src={video.snippet.thumbnails.medium.url} alt=\":(\"/><p>{video.snippet.title}</p>\r\n                </div>\r\n            );\r\n        });\r\n    };\r\n\r\n    displayList = () => {\r\n        if(this.state.listIsHidden)\r\n            return (\r\n                <div className=\"video-container__selected-hidden\">\r\n                    <div className=\"video-container__display-hidden\">\r\n                        <iframe src={`https://www.youtube.com/embed/${this.state.videoId}`} />\r\n                    </div> \r\n                    <div className=\"video-container__icon\">\r\n                        <ion-icon onClick={() => this.setState({ listIsHidden: false })} name=\"arrow-dropup-circle\"/>\r\n                    </div>\r\n                </div>\r\n            );\r\n        else return (\r\n                <div className=\"video-container__selected-showed\">\r\n                    <div className=\"video-container__display-showed\">\r\n                        <iframe src={`https://www.youtube.com/embed/${this.state.videoId}`} />\r\n                        <div className=\"login-form-btn-logout\" onClick={() => this.props.resetSelectedVideo()}\r\n                        style={{ margin: '1rem auto', width: '8rem' }}>\r\n                            Cofnij\r\n                        </div>\r\n                    </div> \r\n                    <div className=\"video-container__icon\">\r\n                        <ion-icon onClick={() => this.setState({ listIsHidden: true })} name=\"arrow-dropdown-circle\"/>\r\n                    </div>\r\n                    <div className=\"video-container__list\">\r\n                        {this.renderList()}\r\n                    </div>\r\n                </div>\r\n            );\r\n    };\r\n\r\n    render() {\r\n        if(!this.props.isVideoSelected)\r\n            return <div className=\"video-container\">{this.renderList()}</div>;\r\n        else return this.displayList()\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { listOfVideos: state.youtubeList, isVideoSelected: state.selectedYTVideo };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectedVideo, resetSelectedVideo })(ListDisplay);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchYoutube, resetYoutubeList, resetSelectedVideo } from './actions';\r\nimport ListDisplay from './ListDisplay';\r\n\r\nclass SearchList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { inputValue: '' };\r\n        this.props.resetYoutubeList();\r\n    };\r\n\r\n    onSearchBtnClick = () => {\r\n        if(this.state.inputValue) {\r\n            this.props.getAPI(this.state.inputValue);\r\n            this.setState({ inputValue: '' });\r\n            this.props.resetSelectedVideo();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"login-container\"> \r\n                    <div className=\"login-container-searchBar\">\r\n                        <input type=\"text\" className=\"input-text\" placeholder=\"What you want to find?\"\r\n                        value={this.state.inputValue} \r\n                        onChange={event => this.setState({ inputValue: event.target.value })}\r\n                        /> \r\n                        <button className=\"input-btn\" onClick={this.onSearchBtnClick}>\r\n                            Search\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <ListDisplay />\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default connect(null, {\r\n    getAPI: fetchYoutube, resetYoutubeList, resetSelectedVideo\r\n})(SearchList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { displayLoginNav, userSignIn } from './actions';\r\nimport SearchList from './SearchList';\r\n \r\nclass Login extends React.Component {\r\n    state = { attemptToLogIn: false };\r\n\r\n    renderError = meta => meta.touched && meta.error && !meta.active ? meta.error : null;\r\n\r\n    renderElement = formProps => {\r\n        const { meta } = formProps;\r\n        return (\r\n            <div className=\"login-form-item\">\r\n                {formProps.label}<input type={formProps.type} {...formProps.input} placeholder={this.renderError(meta)}\r\n                className={meta.touched && meta.error && !meta.active ? 'red-background' : ''} />\r\n            </div>\r\n        );\r\n        \r\n    };\r\n\r\n    onSubmitBtn = formValues => {\r\n        this.setState({ attemptToLogIn: true });\r\n        this.validateInputValues(formValues);\r\n        this.props.reset();\r\n    };\r\n\r\n    alertLogIn = ''; \r\n\r\n    validateInputValues = formValues => {\r\n        const accountArr = Object.values(this.props.accountDataBase);\r\n        this.alertLogIn = '';\r\n\r\n        if(!accountArr.length) this.alertLogIn = 'Your email or password are incorrect.';\r\n        accountArr.forEach(account => {\r\n            if(this.props.userSignStatus !== true && (account.email !== formValues.email || account.password !== formValues.password)) \r\n                this.alertLogIn = 'Your email or password are incorrect.';\r\n            else {\r\n                this.props.userSignIn(account.id, 'local');\r\n                this.setState({ attemptToLogIn: false }); \r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        this.props.displayLoginNav(true);\r\n        if(!this.state.attemptToLogIn && this.props.userSignStatus !== true)    \r\n            return (\r\n                <form onSubmit={this.props.handleSubmit(this.onSubmitBtn.bind(this))}>\r\n                    <Field name=\"email\" component={this.renderElement} label=\"Your email: \" type=\"email\"/>\r\n                    <Field name=\"password\" component={this.renderElement} label=\"Your password: \" type=\"text\"/>\r\n                    <button className=\"login-form-btn\">Log in</button>\r\n                </form>\r\n            );\r\n        else if(this.state.attemptToLogIn && this.props.userSignStatus !== true) {\r\n            return (\r\n                <div className=\"login__account__message\">\r\n                    <p>{this.alertLogIn}</p>\r\n                    <button className=\"login-form-btn-logout\" onClick={() => this.setState({ attemptToLogIn: false})}>\r\n                        Return\r\n                    </button>\r\n                </div>\r\n            );\r\n        } else return <SearchList />;\r\n    };\r\n};\r\n\r\nconst validate = formValues => {\r\n    const error = {};\r\n\r\n    if(!formValues.email) error.email = 'You must input your email!';\r\n    if(!formValues.password) error.password = 'You must input your password!';\r\n\r\n    return error;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { accountDataBase: state.localAccount, userSignStatus: state.signedStatus.userSignStatus };\r\n}\r\n\r\nconst Wrapper = reduxForm({\r\n    form: 'loginPage', validate\r\n})(Login);\r\n\r\nexport default connect(mapStateToProps, {\r\n    userSignIn, displayLoginNav\r\n})(Wrapper);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { isEmpty } from 'lodash';\r\nimport { displayLoginNav, createNewAccount } from './actions';\r\n\r\nclass CreateAccount extends React.Component {\r\n    state = { isChecked: true, newAccountSuccessful: false, alreadyExist: false };\r\n\r\n    renderError = meta => meta.touched && meta.error && !meta.active ? meta.error : null;\r\n\r\n    renderElement = formProps => {\r\n        const { meta } = formProps;\r\n        if (formProps.input.name === 'email')\r\n            return (\r\n                <div className=\"login-form-item\">\r\n                    Your email:<input type=\"email\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n        else if(formProps.input.name === 'password') \r\n            return (\r\n                <div className=\"login-form-item\">\r\n                    Your password:<input type=\"text\" placeholder={this.renderError(meta)} \r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}  \r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n        else \r\n            return (\r\n                <div className=\"login-form-item\">\r\n                    {formProps.label}<input type=\"text\" placeholder={this.renderError(meta)}\r\n                    className={meta.touched && meta.error && !meta.active ? 'red-background' : ''}\r\n                    {...formProps.input} />\r\n                </div>\r\n            );\r\n    };\r\n\r\n    onSubmitBtn = formValues => {\r\n        \r\n        const objArr = Object.values(this.props.userAcc);\r\n\r\n        let check = true;\r\n        objArr.forEach(obj => {\r\n            if(obj.email === formValues.email) check = false;\r\n        });\r\n\r\n        if(check) {\r\n            let id;\r\n            if(isEmpty(this.props.userAcc) || objArr[0].id === null) \r\n                id = 0;\r\n            else {\r\n                id = objArr[0].id + 1;\r\n                objArr.forEach(obj => {\r\n                    if(id <= obj.id) id = obj.id + 1;\r\n                });\r\n            };\r\n\r\n            this.props.createNewAccount({...formValues, id});\r\n            this.setState({ newAccountSuccessful: true });\r\n        } else this.setState({ alreadyExist: true });\r\n        \r\n    }\r\n    \r\n    render() {\r\n        this.props.displayLoginNav(true);\r\n        if(this.state.newAccountSuccessful && !this.state.alreadyExist) return (\r\n                <div className=\"login__account__message\">\r\n                    Your account was successfuly created. You can now log in.\r\n                    <Link to=\"/login\" className=\"login-form-btn-logout\" onClick={this.props.userSignOut}>Return</Link>\r\n                </div>\r\n                );\r\n        if(this.state.alreadyExist) return (\r\n            <div className=\"login__account__message\">\r\n                Account with this email already exist.\r\n                <Link to=\"/login\" className=\"login-form-btn-logout\" onClick={this.props.userSignOut}>Return</Link>\r\n            </div>\r\n            );\r\n        if(this.props.userSignStatus) return (\r\n            <div className=\"login__account__message\">\r\n                <Link to=\"/login\" className=\"login-form-btn-logout\" onClick={this.props.userSignOut}>Return</Link>\r\n            </div>\r\n            );\r\n        return(\r\n            <form onSubmit={this.props.handleSubmit(this.onSubmitBtn)}>\r\n                <Field name=\"firstName\" component={this.renderElement} label=\"Your first name:\" />\r\n                <Field name=\"lastName\" component={this.renderElement} label=\"Your last name:\" />\r\n                <div className=\"login-form-item\">Your gender: \r\n                    <div className=\"login-form-item-gender\">\r\n                        <Field name=\"gender\" component=\"input\" type=\"radio\" value=\"male\" \r\n                        checked={this.state.isChecked}  onClick={() => this.setState({ isChecked: true })} />Male\r\n                        <Field name=\"gender\" component=\"input\" type=\"radio\" value=\"female\" \r\n                        checked={!this.state.isChecked} onClick={() => this.setState({ isChecked: false })} />Female\r\n                    </div>\r\n                </div>\r\n                <Field name=\"email\" component={this.renderElement} />\r\n                <Field name=\"password\" component={this.renderElement} />\r\n                <button className=\"login-form-btn\">Create</button>\r\n            </form>\r\n        );\r\n    };\r\n};\r\n\r\nconst validate = formValues => {\r\n    const error = {};\r\n\r\n    if(!formValues.firstName) error.firstName = 'You must input your first name!';\r\n    if(!formValues.lastName) error.lastName = 'You must input your last name!';\r\n    if(!formValues.email) error.email = 'You must input your email!';\r\n    if(!formValues.password) error.password = 'You must input your password!';\r\n\r\n    return error;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { userAcc: state.localAccount, userSignStatus: state.signedStatus.userSignStatus };\r\n};\r\n\r\nconst formWrapped = reduxForm({\r\n    form: 'newAccount', validate\r\n})(CreateAccount);\r\n\r\nexport default connect(mapStateToProps, { displayLoginNav, createNewAccount })(formWrapped);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { displayLoginNav } from './actions';\r\nimport SearchList from './SearchList';\r\n\r\nclass IntroMenu extends React.Component {\r\n    render(){\r\n        this.props.displayLoginNav(true);\r\n        if(!this.props.isSignedIn) \r\n            return (\r\n                <div style={{ textAlign: 'center', marginTop: '3rem', fontSize: '2rem' }}>\r\n                    Create an account and login or use you google account in order to search videos.\r\n                </div>\r\n            );\r\n        else return (\r\n                <SearchList />\r\n            );\r\n    };\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { isSignedIn: state.signedStatus.userSignStatus }\r\n};\r\n\r\nexport default connect(mapStateToProps, { displayLoginNav })(IntroMenu);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { displayLoginNav, userSignOut, deleteCurrentAccount } from './actions';\r\nimport Login from './Login';\r\n \r\nconst DeleteAccount = props => {\r\n    props.displayLoginNav(true);\r\n    if(props.isSignIn.userSignStatus && props.isSignIn.type === 'local')\r\n        return (\r\n            <div>\r\n                <div className=\"login__account__message\">Are you sure you want to delete an account?</div>\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Link to='/login' className=\"login-form-btn-logout\" \r\n                    onClick={() => onClickYes(props)} style={{ color: 'rgb(248, 117, 117)' }}>\r\n                        Yes\r\n                    </Link>\r\n                    <Link to='/login' className=\"login-form-btn-logout\" \r\n                    style={{marginLeft:'3rem', color: 'rgb(140, 247, 145)'}}>\r\n                        No\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    else return <Login />;\r\n};\r\n\r\nconst onClickYes = props => {\r\n    props.deleteAcc(props.isSignIn.userID);\r\n    props.userSignOut();\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return { isSignIn: state.signedStatus };\r\n};\r\n\r\nexport default connect(mapStateToProps, { \r\n    deleteAcc: deleteCurrentAccount, userSignOut, displayLoginNav \r\n})(DeleteAccount);\r\n","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Login from './Login';\r\nimport CreateAccount from './CreateAccount';\r\nimport IntroMenu from './IntroMenu';\r\nimport DeleteAccount from './DeleteAccount';\r\n \r\nconst LoginNav = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Header />\r\n            <Route path=\"/\" exact component={IntroMenu} />\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/create\" component={CreateAccount} />\r\n            <Route path=\"/delete\" component={DeleteAccount} />\r\n        </BrowserRouter>   \r\n        );\r\n};\r\n\r\nexport default LoginNav;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport reduxThunk from 'redux-thunk';\nimport reducers from './LoginApp/reducers';\nimport LoginNav from './LoginApp/LoginNav';\n\nReactDOM.render(\n    <Provider store={createStore(reducers, applyMiddleware(reduxThunk))}>\n        <LoginNav />\n    </Provider>, \n    document.querySelector('.login')\n);\n"],"sourceRoot":""}